"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.AuthProvider = exports.AuthContext = void 0;

var _construct = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/reflect/construct"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/objectSpread2"));

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs3/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _react = _interopRequireDefault(require("react"));

var _authClient = require("./authClient");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = (0, _construct.default)(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_construct.default) return false; if (_construct.default.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call((0, _construct.default)(Date, [], function () {})); return true; } catch (e) { return false; } }

var AuthContext = _react.default.createContext({});

exports.AuthContext = AuthContext;

/**
 * @example
 * ```js
 *  const client = new Auth0Client(options)
 *  // ...
 *  <AuthProvider client={client} type="auth0">
 *    {children}
 *  </AuthProvider>
 * ```
 */
var AuthProvider = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(AuthProvider, _React$Component);

  var _super = _createSuper(AuthProvider);

  function AuthProvider(props) {
    var _this;

    (0, _classCallCheck2.default)(this, AuthProvider);
    _this = _super.call(this, props);
    _this.state = {
      loading: true,
      isAuthenticated: false,
      currentUser: null
    };
    _this.rwClient = void 0;

    _this.logIn = /*#__PURE__*/function () {
      var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(options) {
        var currentUser;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _this.rwClient.login(options);

              case 2:
                currentUser = _context.sent;

                _this.setState({
                  currentUser: currentUser,
                  isAuthenticated: currentUser !== null
                });

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();

    _this.logOut = /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
      return _regenerator.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return _this.rwClient.logout();

            case 2:
              _this.setState({
                currentUser: null,
                isAuthenticated: false
              });

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
    _this.rwClient = (0, _authClient.createAuthClient)(props.client, props.type);
    return _this;
  }

  (0, _createClass2.default)(AuthProvider, [{
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
        var _this$rwClient$restor, _this$rwClient;

        var currentUser;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return (_this$rwClient$restor = (_this$rwClient = this.rwClient).restoreAuthState) === null || _this$rwClient$restor === void 0 ? void 0 : _this$rwClient$restor.call(_this$rwClient);

              case 2:
                _context3.next = 4;
                return this.rwClient.currentUser();

              case 4:
                currentUser = _context3.sent;
                this.setState({
                  currentUser: currentUser,
                  isAuthenticated: currentUser !== null,
                  loading: false
                });

              case 6:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          client = _this$props.client,
          type = _this$props.type,
          children = _this$props.children;
      return /*#__PURE__*/_react.default.createElement(AuthContext.Provider, {
        value: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this.state), {}, {
          logIn: this.logIn,
          logOut: this.logOut,
          getToken: this.rwClient.getToken,
          client: client,
          type: type
        })
      }, children);
    }
  }]);
  return AuthProvider;
}(_react.default.Component);

exports.AuthProvider = AuthProvider;