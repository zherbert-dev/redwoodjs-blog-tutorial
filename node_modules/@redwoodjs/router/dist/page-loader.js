"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.PageLoader = exports.usePageLoadingContext = exports.PageLoadingContext = void 0;

var _construct = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/reflect/construct"));

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs3/regenerator"));

var _setTimeout2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/set-timeout"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/asyncToGenerator"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/concat"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _internal = require("./internal");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = (0, _construct.default)(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_construct.default) return false; if (_construct.default.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call((0, _construct.default)(Date, [], function () {})); return true; } catch (e) { return false; } }

var PageLoadingContext = (0, _internal.createNamedContext)('PageLoading');
exports.PageLoadingContext = PageLoadingContext;

var usePageLoadingContext = function usePageLoadingContext() {
  return (0, _react.useContext)(PageLoadingContext);
};

exports.usePageLoadingContext = usePageLoadingContext;

var PageLoader = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(PageLoader, _React$PureComponent);

  var _super = _createSuper(PageLoader);

  function PageLoader() {
    var _context;

    var _this;

    (0, _classCallCheck2.default)(this, PageLoader);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, (0, _concat.default)(_context = [this]).call(_context, args));
    _this.state = {
      Page: undefined,
      pageName: undefined,
      slowModuleImport: false
    };

    _this.clearLoadingTimeout = function () {
      clearTimeout(_this.loadingTimeout);
    };

    _this.startPageLoadTransition = /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
      var _this$props, spec, delay, loader, name, module;

      return _regenerator.default.wrap(function _callee$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _this$props = _this.props, spec = _this$props.spec, delay = _this$props.delay;
              loader = spec.loader, name = spec.name; // Update the context if importing the page is taking longer
              // than `delay`.
              // Consumers of the context can show a loading indicator
              // to signal to the user that something is happening.

              _this.loadingTimeout = (0, _setTimeout2.default)(function () {
                return _this.setState({
                  slowModuleImport: true
                });
              }, delay); // Wait to download and parse the page.

              _context2.next = 5;
              return loader();

            case 5:
              module = _context2.sent;

              // Remove the timeout because the page has loaded.
              _this.clearLoadingTimeout();

              _this.setState({
                pageName: name,
                Page: module.default,
                slowModuleImport: false,
                params: _this.props.params
              });

            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee);
    }));
    return _this;
  }

  (0, _createClass2.default)(PageLoader, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.startPageLoadTransition();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.spec.name !== this.props.spec.name) {
        this.clearLoadingTimeout();
        this.startPageLoadTransition();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var Page = this.state.Page;

      if (Page) {
        return /*#__PURE__*/_react.default.createElement(PageLoadingContext.Provider, {
          value: {
            loading: this.state.slowModuleImport
          }
        }, /*#__PURE__*/_react.default.createElement(Page, this.state.params));
      } else {
        return null;
      }
    }
  }]);
  return PageLoader;
}(_react.default.PureComponent);

exports.PageLoader = PageLoader;