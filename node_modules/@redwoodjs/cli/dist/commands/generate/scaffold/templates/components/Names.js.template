import { useMutation } from '@redwoodjs/web'
import { Link, routes } from '@redwoodjs/router'

const DELETE_${singularConstantName}_MUTATION = gql`
  mutation Delete${singularPascalName}Mutation($id: ${idType}!) {
    delete${singularPascalName}(id: $id) {
      id
    }
  }
`

const MAX_STRING_LENGTH = 150

const truncate = (text) => {
  let output = text
  if (text && text.length > MAX_STRING_LENGTH) {
    output = output.substring(0, MAX_STRING_LENGTH) + '...'
  }
  return output
}

const timeTag = (datetime) => {
  return (
    <time dateTime={datetime} title={datetime}>
      {new Date(datetime).toUTCString()}
    </time>
  )
}

const ${pluralPascalName}List = ({ ${pluralCamelName} }) => {
  const [delete${singularPascalName}] = useMutation(DELETE_${singularConstantName}_MUTATION)

  const onDeleteClick = (id) => {
    if (confirm('Are you sure you want to delete ${singularCamelName} ' + id + '?')) {
      delete${singularPascalName}({ variables: { id }, refetchQueries: ['${pluralConstantName}'] })
    }
  }

  return (
    <div className="rw-segment rw-table-wrapper-responsive">
      <table className="rw-table">
        <thead>
          <tr><% columns.forEach(column => { %>
            <th><%= column.name %></th><% }) %>
            <th>&nbsp;</th>
          </tr>
        </thead>
        <tbody>
          {${pluralCamelName}.map((${singularCamelName}) => (
            <tr key={${singularCamelName}.id}><% columns.forEach(column => { %>
              <td>{<% if (column.type === 'DateTime') { %>timeTag<% } else { %>truncate<% } %>(${singularCamelName}.<%= column.name %>)}</td><% }) %>
              <td>
                <nav className="rw-table-actions">
                  <Link
                    to={routes.${singularRouteName}({ id: ${singularCamelName}.id })}
                    title={'Show ${singularCamelName} ' + ${singularCamelName}.id + ' detail'}
                    className="rw-button rw-button-small"
                  >
                    Show
                  </Link>
                  <Link
                    to={routes.${editRouteName}({ id: ${singularCamelName}.id })}
                    title={'Edit ${singularCamelName} ' + ${singularCamelName}.id}
                    className="rw-button rw-button-small rw-button-blue"
                  >
                    Edit
                  </Link>
                  <a
                    href="#"
                    title={'Delete ${singularCamelName} ' + ${singularCamelName}.id}
                    className="rw-button rw-button-small rw-button-red"
                    onClick={() => onDeleteClick(${singularCamelName}.id)}
                  >
                    Delete
                  </a>
                </nav>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  )
}

export default ${pluralPascalName}List
