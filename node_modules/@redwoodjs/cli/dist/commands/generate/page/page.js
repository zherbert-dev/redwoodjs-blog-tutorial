"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.handler = exports.builder = exports.desc = exports.command = exports.routes = exports.files = void 0;

var _filter = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/filter"));

var _reduce = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/reduce"));

var _listr = _interopRequireDefault(require("listr"));

var _camelcase = _interopRequireDefault(require("camelcase"));

var _pascalcase = _interopRequireDefault(require("pascalcase"));

var _lib = require("../../../lib");

var _colors = _interopRequireDefault(require("../../../lib/colors"));

var _helpers = require("../helpers");

const COMPONENT_SUFFIX = 'Page';
const REDWOOD_WEB_PATH_NAME = 'pages';

const files = ({
  name,
  ...rest
}) => {
  var _context;

  const pageFile = (0, _helpers.templateForComponentFile)({
    name,
    suffix: COMPONENT_SUFFIX,
    webPathSection: REDWOOD_WEB_PATH_NAME,
    generator: 'page',
    templatePath: 'page.js.template',
    templateVars: rest
  });
  const testFile = (0, _helpers.templateForComponentFile)({
    name,
    suffix: COMPONENT_SUFFIX,
    extension: '.test.js',
    webPathSection: REDWOOD_WEB_PATH_NAME,
    generator: 'page',
    templatePath: 'test.js.template',
    templateVars: rest
  }); // Returns
  // {
  //    "path/to/fileA": "<<<template>>>",
  //    "path/to/fileB": "<<<template>>>",
  // }

  return (0, _reduce.default)(_context = [pageFile, testFile]).call(_context, (acc, [outputPath, content]) => {
    return {
      [outputPath]: content,
      ...acc
    };
  }, {});
};

exports.files = files;

const routes = ({
  name,
  path
}) => {
  return [`<Route path="${path}" page={${(0, _pascalcase.default)(name)}Page} name="${(0, _camelcase.default)(name)}" />`];
};

exports.routes = routes;
const command = 'page <name> [path]';
exports.command = command;
const desc = 'Generate a page component.';
exports.desc = desc;
const builder = {
  force: {
    type: 'boolean',
    default: false
  }
};
exports.builder = builder;

const handler = async ({
  name,
  path,
  force
}) => {
  var _context2;

  const tasks = new _listr.default((0, _filter.default)(_context2 = [{
    title: 'Generating page files...',
    task: async () => {
      const f = await files({
        name,
        path: (0, _helpers.pathName)(path, name)
      });
      return (0, _lib.writeFilesTask)(f, {
        overwriteExisting: force
      });
    }
  }, {
    title: 'Updating routes file...',
    task: async () => {
      (0, _lib.addRoutesToRouterTask)(routes({
        name,
        path: (0, _helpers.pathName)(path, name)
      }));
    }
  }]).call(_context2, Boolean), {
    collapse: false
  });

  try {
    await tasks.run();
  } catch (e) {
    console.log(_colors.default.error(e.message));
  }
};

exports.handler = handler;