"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.handler = exports.desc = exports.command = exports.builder = exports.files = void 0;

var _reduce = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/reduce"));

var _camelcase = _interopRequireDefault(require("camelcase"));

var _pluralize = _interopRequireDefault(require("pluralize"));

var _helpers = require("../helpers");

const files = async ({
  name,
  relations,
  ...rest
}) => {
  var _context;

  const componentName = (0, _camelcase.default)((0, _pluralize.default)(name));
  const serviceFile = (0, _helpers.templateForComponentFile)({
    name,
    componentName: componentName,
    apiPathSection: 'services',
    generator: 'service',
    templatePath: 'service.js.template',
    templateVars: {
      relations: relations || [],
      ...rest
    }
  });
  const testFile = (0, _helpers.templateForComponentFile)({
    name,
    componentName: componentName,
    extension: '.test.js',
    apiPathSection: 'services',
    generator: 'service',
    templatePath: 'test.js.template',
    templateVars: {
      relations: relations || [],
      ...rest
    }
  }); // Returns
  // {
  //    "path/to/fileA": "<<<template>>>",
  //    "path/to/fileB": "<<<template>>>",
  // }

  return (0, _reduce.default)(_context = [serviceFile, testFile]).call(_context, (acc, [outputPath, content]) => {
    return {
      [outputPath]: content,
      ...acc
    };
  }, {});
};

exports.files = files;
const builder = {
  crud: {
    type: 'boolean',
    default: false,
    desc: 'Create CRUD functions'
  },
  force: {
    type: 'boolean',
    default: false
  }
};
exports.builder = builder;
const {
  command,
  desc,
  handler
} = (0, _helpers.createYargsForComponentGeneration)({
  componentName: 'service',
  filesFn: files
});
exports.handler = handler;
exports.desc = desc;
exports.command = command;