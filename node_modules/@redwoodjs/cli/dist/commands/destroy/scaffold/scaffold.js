"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.handler = exports.tasks = exports.desc = exports.command = void 0;

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/map"));

var _listr = _interopRequireDefault(require("listr"));

var _lib = require("../../../lib");

var _colors = _interopRequireDefault(require("../../../lib/colors"));

var _scaffold = require("../../generate/scaffold/scaffold");

const command = 'scaffold <model>';
exports.command = command;
const desc = 'Destroy pages, SDL, and a services object.';
exports.desc = desc;

const tasks = ({
  model,
  path
}) => new _listr.default([{
  title: 'Destroying scaffold files...',
  task: async () => {
    const f = await (0, _scaffold.files)({
      model,
      path
    });
    return (0, _lib.deleteFilesTask)(f);
  }
}, {
  title: 'Cleaning up scaffold routes...',
  task: async () => {
    const routes = await (0, _scaffold.routes)({
      model,
      path
    });
    const routeNames = (0, _map.default)(routes).call(routes, extractRouteName);
    return (0, _lib.removeRoutesFromRouterTask)(routeNames);
  }
}], {
  collapse: false,
  exitOnError: true
});

exports.tasks = tasks;

const handler = async ({
  model: modelArg
}) => {
  const {
    model,
    path
  } = (0, _scaffold.splitPathAndModel)(modelArg);
  const t = tasks({
    model,
    path
  });

  try {
    await t.run();
  } catch (e) {
    console.log(_colors.default.error(e.message));
  }
};

exports.handler = handler;

const extractRouteName = route => {
  const {
    groups
  } = route.match(/.*name="?(?<routeName>\w+)"?/);
  return groups.routeName;
};