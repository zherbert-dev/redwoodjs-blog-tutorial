"use strict";

var _Object$keys = require("@babel/runtime-corejs3/core-js/object/keys");

var _forEachInstanceProperty = require("@babel/runtime-corejs3/core-js/instance/for-each");

var _context;

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

var _exportNames = {
  routes: true,
  Router: true
};
exports.Router = exports.routes = void 0;

var _react = _interopRequireDefault(require("react"));

var _index = require("@redwoodjs/router/dist/index");

_forEachInstanceProperty(_context = _Object$keys(_index)).call(_context, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

// We're bypassing the `main` field in `package.json` because we're
// replacing imports of `@redwoodjs/router` with this file, and not doing so
// would cause an infinite loop.
// See: ./packages/core/config/jest.config.web.js
const routes = {};
/**
 * This is used in place of the real router during tests.
 * It populates the `routes.<pagename>()` utility object.
 */

exports.routes = routes;

const Router = ({
  children
}) => {
  for (let route of _react.default.Children.toArray(children)) {
    const {
      name
    } = route.props;
    routes[name] = jest.fn(() => name);
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);
};

exports.Router = Router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Nb2NrUm91dGVyLmpzIl0sIm5hbWVzIjpbInJvdXRlcyIsIlJvdXRlciIsImNoaWxkcmVuIiwicm91dGUiLCJSZWFjdCIsIkNoaWxkcmVuIiwidG9BcnJheSIsIm5hbWUiLCJwcm9wcyIsImplc3QiLCJmbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUtBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFKQTtBQUNBO0FBQ0E7QUFDQTtBQUdPLE1BQU1BLE1BQU0sR0FBRyxFQUFmO0FBRVA7Ozs7Ozs7QUFJTyxNQUFNQyxNQUFNLEdBQUcsQ0FBQztBQUFFQyxFQUFBQTtBQUFGLENBQUQsS0FBa0I7QUFDdEMsT0FBSyxJQUFJQyxLQUFULElBQWtCQyxlQUFNQyxRQUFOLENBQWVDLE9BQWYsQ0FBdUJKLFFBQXZCLENBQWxCLEVBQW9EO0FBQ2xELFVBQU07QUFBRUssTUFBQUE7QUFBRixRQUFXSixLQUFLLENBQUNLLEtBQXZCO0FBQ0FSLElBQUFBLE1BQU0sQ0FBQ08sSUFBRCxDQUFOLEdBQWVFLElBQUksQ0FBQ0MsRUFBTCxDQUFRLE1BQU1ILElBQWQsQ0FBZjtBQUNEOztBQUNELHNCQUFPLDJEQUFQO0FBQ0QsQ0FOTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbi8vIFdlJ3JlIGJ5cGFzc2luZyB0aGUgYG1haW5gIGZpZWxkIGluIGBwYWNrYWdlLmpzb25gIGJlY2F1c2Ugd2UncmVcbi8vIHJlcGxhY2luZyBpbXBvcnRzIG9mIGBAcmVkd29vZGpzL3JvdXRlcmAgd2l0aCB0aGlzIGZpbGUsIGFuZCBub3QgZG9pbmcgc29cbi8vIHdvdWxkIGNhdXNlIGFuIGluZmluaXRlIGxvb3AuXG4vLyBTZWU6IC4vcGFja2FnZXMvY29yZS9jb25maWcvamVzdC5jb25maWcud2ViLmpzXG5leHBvcnQgKiBmcm9tICdAcmVkd29vZGpzL3JvdXRlci9kaXN0L2luZGV4J1xuXG5leHBvcnQgY29uc3Qgcm91dGVzID0ge31cblxuLyoqXG4gKiBUaGlzIGlzIHVzZWQgaW4gcGxhY2Ugb2YgdGhlIHJlYWwgcm91dGVyIGR1cmluZyB0ZXN0cy5cbiAqIEl0IHBvcHVsYXRlcyB0aGUgYHJvdXRlcy48cGFnZW5hbWU+KClgIHV0aWxpdHkgb2JqZWN0LlxuICovXG5leHBvcnQgY29uc3QgUm91dGVyID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBmb3IgKGxldCByb3V0ZSBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KGNoaWxkcmVuKSkge1xuICAgIGNvbnN0IHsgbmFtZSB9ID0gcm91dGUucHJvcHNcbiAgICByb3V0ZXNbbmFtZV0gPSBqZXN0LmZuKCgpID0+IG5hbWUpXG4gIH1cbiAgcmV0dXJuIDw+PC8+XG59XG4iXX0=