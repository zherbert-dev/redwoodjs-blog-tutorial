import { RustLog, RustError } from './log';
export declare class PrismaQueryEngineError extends Error {
    /**
     * HTTP Code
     */
    code: number;
    constructor(message: string, code: number);
}
export declare function getMessage(log: string | RustLog | RustError | any): string;
export interface RequestError {
    error: string;
    user_facing_error: {
        is_panic: boolean;
        message: string;
        meta?: object;
        error_code?: string;
    };
}
export declare class PrismaClientKnownRequestError extends Error {
    code: string;
    meta?: object;
    constructor(message: string, code: string, meta?: any);
}
export declare class PrismaClientUnknownRequestError extends Error {
    constructor(message: string);
}
export declare class PrismaClientRustPanicError extends Error {
    constructor(message: string);
}
export declare class PrismaClientInitializationError extends Error {
    constructor(message: string);
}
export interface ErrorWithLinkInput {
    version: string;
    platform: string;
    title: string;
    description?: string;
}
export declare function getErrorMessageWithLink({ version, platform, title, description, }: ErrorWithLinkInput): string;
